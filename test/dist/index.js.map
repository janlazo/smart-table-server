{"version":3,"file":"index.js","sources":["../../node_modules/zora/dist/zora.es.js","../../node_modules/smart-table-operators/dist/bundle/module.js","../../node_modules/smart-table-json-pointer/dist/bundle/module.js","../../node_modules/smart-table-sort/dist/bundle/module.js","../../node_modules/smart-table-filter/dist/bundle/module.js","../../node_modules/smart-table-search/dist/bundle/module.js","../../node_modules/smart-table-events/dist/bundle/module.js","../../node_modules/smart-table-core/dist/bundle/module.js","../../index.js","../index.js"],"sourcesContent":["/**\n * slice() reference.\n */\n\nvar slice = Array.prototype.slice;\n\n/**\n * Expose `co`.\n */\n\nvar index = co['default'] = co.co = co;\n\n/**\n * Wrap the given generator `fn` into a\n * function that returns a promise.\n * This is a separate function so that\n * every `co()` call doesn't create a new,\n * unnecessary closure.\n *\n * @param {GeneratorFunction} fn\n * @return {Function}\n * @api public\n */\n\nco.wrap = function (fn) {\n  createPromise.__generatorFunction__ = fn;\n  return createPromise;\n  function createPromise() {\n    return co.call(this, fn.apply(this, arguments));\n  }\n};\n\n/**\n * Execute the generator function or a generator\n * and return a promise.\n *\n * @param {Function} fn\n * @return {Promise}\n * @api public\n */\n\nfunction co(gen) {\n  var ctx = this;\n  var args = slice.call(arguments, 1);\n\n  // we wrap everything in a promise to avoid promise chaining,\n  // which leads to memory leak errors.\n  // see https://github.com/tj/co/issues/180\n  return new Promise(function(resolve, reject) {\n    if (typeof gen === 'function') gen = gen.apply(ctx, args);\n    if (!gen || typeof gen.next !== 'function') return resolve(gen);\n\n    onFulfilled();\n\n    /**\n     * @param {Mixed} res\n     * @return {Promise}\n     * @api private\n     */\n\n    function onFulfilled(res) {\n      var ret;\n      try {\n        ret = gen.next(res);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * @param {Error} err\n     * @return {Promise}\n     * @api private\n     */\n\n    function onRejected(err) {\n      var ret;\n      try {\n        ret = gen.throw(err);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * Get the next value in the generator,\n     * return a promise.\n     *\n     * @param {Object} ret\n     * @return {Promise}\n     * @api private\n     */\n\n    function next(ret) {\n      if (ret.done) return resolve(ret.value);\n      var value = toPromise.call(ctx, ret.value);\n      if (value && isPromise(value)) return value.then(onFulfilled, onRejected);\n      return onRejected(new TypeError('You may only yield a function, promise, generator, array, or object, '\n        + 'but the following object was passed: \"' + String(ret.value) + '\"'));\n    }\n  });\n}\n\n/**\n * Convert a `yield`ed value into a promise.\n *\n * @param {Mixed} obj\n * @return {Promise}\n * @api private\n */\n\nfunction toPromise(obj) {\n  if (!obj) return obj;\n  if (isPromise(obj)) return obj;\n  if (isGeneratorFunction(obj) || isGenerator(obj)) return co.call(this, obj);\n  if ('function' == typeof obj) return thunkToPromise.call(this, obj);\n  if (Array.isArray(obj)) return arrayToPromise.call(this, obj);\n  if (isObject(obj)) return objectToPromise.call(this, obj);\n  return obj;\n}\n\n/**\n * Convert a thunk to a promise.\n *\n * @param {Function}\n * @return {Promise}\n * @api private\n */\n\nfunction thunkToPromise(fn) {\n  var ctx = this;\n  return new Promise(function (resolve, reject) {\n    fn.call(ctx, function (err, res) {\n      if (err) return reject(err);\n      if (arguments.length > 2) res = slice.call(arguments, 1);\n      resolve(res);\n    });\n  });\n}\n\n/**\n * Convert an array of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Array} obj\n * @return {Promise}\n * @api private\n */\n\nfunction arrayToPromise(obj) {\n  return Promise.all(obj.map(toPromise, this));\n}\n\n/**\n * Convert an object of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Object} obj\n * @return {Promise}\n * @api private\n */\n\nfunction objectToPromise(obj){\n  var results = new obj.constructor();\n  var keys = Object.keys(obj);\n  var promises = [];\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var promise = toPromise.call(this, obj[key]);\n    if (promise && isPromise(promise)) defer(promise, key);\n    else results[key] = obj[key];\n  }\n  return Promise.all(promises).then(function () {\n    return results;\n  });\n\n  function defer(promise, key) {\n    // predefine the key in the result\n    results[key] = undefined;\n    promises.push(promise.then(function (res) {\n      results[key] = res;\n    }));\n  }\n}\n\n/**\n * Check if `obj` is a promise.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isPromise(obj) {\n  return 'function' == typeof obj.then;\n}\n\n/**\n * Check if `obj` is a generator.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isGenerator(obj) {\n  return 'function' == typeof obj.next && 'function' == typeof obj.throw;\n}\n\n/**\n * Check if `obj` is a generator function.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\nfunction isGeneratorFunction(obj) {\n  var constructor = obj.constructor;\n  if (!constructor) return false;\n  if ('GeneratorFunction' === constructor.name || 'GeneratorFunction' === constructor.displayName) return true;\n  return isGenerator(constructor.prototype);\n}\n\n/**\n * Check for plain object.\n *\n * @param {Mixed} val\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(val) {\n  return Object == val.constructor;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar keys = createCommonjsModule(function (module, exports) {\nexports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n});\n\nvar is_arguments = createCommonjsModule(function (module, exports) {\nvar supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n}\n});\n\nvar index$1 = createCommonjsModule(function (module) {\nvar pSlice = Array.prototype.slice;\nvar objectKeys = keys;\nvar isArguments = is_arguments;\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n};\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n});\n\nconst assertions = {\n  ok(val, message = 'should be truthy') {\n    const assertionResult = {\n      pass: Boolean(val),\n      expected: 'truthy',\n      actual: val,\n      operator: 'ok',\n      message\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  deepEqual(actual, expected, message = 'should be equivalent') {\n    const assertionResult = {\n      pass: index$1(actual, expected),\n      actual,\n      expected,\n      message,\n      operator: 'deepEqual'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  equal(actual, expected, message = 'should be equal') {\n    const assertionResult = {\n      pass: actual === expected,\n      actual,\n      expected,\n      message,\n      operator: 'equal'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  notOk(val, message = 'should not be truthy') {\n    const assertionResult = {\n      pass: !Boolean(val),\n      expected: 'falsy',\n      actual: val,\n      operator: 'notOk',\n      message\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  notDeepEqual(actual, expected, message = 'should not be equivalent') {\n    const assertionResult = {\n      pass: !index$1(actual, expected),\n      actual,\n      expected,\n      message,\n      operator: 'notDeepEqual'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  notEqual(actual, expected, message = 'should not be equal') {\n    const assertionResult = {\n      pass: actual !== expected,\n      actual,\n      expected,\n      message,\n      operator: 'notEqual'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  throws(func, expected, message) {\n    let caught, pass, actual;\n    if (typeof expected === 'string') {\n      [expected, message] = [message, expected];\n    }\n    try {\n      func();\n    } catch (error) {\n      caught = {error};\n    }\n    pass = caught !== undefined;\n    actual = caught && caught.error;\n    if (expected instanceof RegExp) {\n      pass = expected.test(actual) || expected.test(actual && actual.message);\n      expected = String(expected);\n    } else if (typeof expected === 'function' && caught) {\n      pass = actual instanceof expected;\n      actual = actual.constructor;\n    }\n    const assertionResult = {\n      pass,\n      expected,\n      actual,\n      operator: 'throws',\n      message: message || 'should throw'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  doesNotThrow(func, expected, message) {\n    let caught;\n    if (typeof expected === 'string') {\n      [expected, message] = [message, expected];\n    }\n    try {\n      func();\n    } catch (error) {\n      caught = {error};\n    }\n    const assertionResult = {\n      pass: caught === undefined,\n      expected: 'no thrown error',\n      actual: caught && caught.error,\n      operator: 'doesNotThrow',\n      message: message || 'should not throw'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  },\n  fail(reason = 'fail called') {\n    const assertionResult = {\n      pass: false,\n      actual: 'fail called',\n      expected: 'fail not called',\n      message: reason,\n      operator: 'fail'\n    };\n    this.test.addAssertion(assertionResult);\n    return assertionResult;\n  }\n};\n\nfunction assertion (test) {\n  return Object.create(assertions, {test: {value: test}});\n}\n\nconst Test = {\n  run: function () {\n    const assert = assertion(this);\n    const now = Date.now();\n    return index(this.coroutine(assert))\n      .then(() => {\n        return {assertions: this.assertions, executionTime: Date.now() - now};\n      });\n  },\n  addAssertion(){\n    const newAssertions = [...arguments].map(a => Object.assign({description: this.description}, a));\n    this.assertions.push(...newAssertions);\n    return this;\n  }\n};\n\nfunction test ({description, coroutine, only = false}) {\n  return Object.create(Test, {\n    description: {value: description},\n    coroutine: {value: coroutine},\n    assertions: {value: []},\n    only: {value: only},\n    length: {\n      get(){\n        return this.assertions.length\n      }\n    }\n  });\n}\n\nfunction tapOut ({pass, message, index}) {\n  const status = pass === true ? 'ok' : 'not ok';\n  console.log([status, index, message].join(' '));\n}\n\nfunction canExit () {\n  return typeof process !== 'undefined' && typeof process.exit === 'function';\n}\n\nfunction tap () {\n  return function * () {\n    let index = 1;\n    let lastId = 0;\n    let success = 0;\n    let failure = 0;\n\n    const starTime = Date.now();\n    console.log('TAP version 13');\n    try {\n      while (true) {\n        const assertion = yield;\n        if (assertion.pass === true) {\n          success++;\n        } else {\n          failure++;\n        }\n        assertion.index = index;\n        if (assertion.id !== lastId) {\n          console.log(`# ${assertion.description} - ${assertion.executionTime}ms`);\n          lastId = assertion.id;\n        }\n        tapOut(assertion);\n        if (assertion.pass !== true) {\n          console.log(`  ---\n  operator: ${assertion.operator}\n  expected: ${JSON.stringify(assertion.expected)}\n  actual: ${JSON.stringify(assertion.actual)}\n  ...`);\n        }\n        index++;\n      }\n    } catch (e) {\n      console.log('Bail out! unhandled exception');\n      console.log(e);\n      if (canExit()) {\n        process.exit(1);\n      }\n    }\n    finally {\n      const execution = Date.now() - starTime;\n      if (index > 1) {\n        console.log(`\n1..${index - 1}\n# duration ${execution}ms\n# success ${success}\n# failure ${failure}`);\n      }\n      if (failure && canExit()) {\n        process.exit(1);\n      }\n    }\n  };\n}\n\nconst Plan = {\n  test(description, coroutine, opts = {}){\n    const testItems = (!coroutine && description.tests) ? [...description] : [{description, coroutine}];\n    this.tests.push(...testItems.map(t=>test(Object.assign(t, opts))));\n    return this;\n  },\n\n  only(description, coroutine){\n    return this.test(description, coroutine, {only: true});\n  },\n\n  run(sink = tap()){\n    const sinkIterator = sink();\n    sinkIterator.next();\n    const hasOnly = this.tests.some(t=>t.only);\n    const runnable = hasOnly ? this.tests.filter(t=>t.only) : this.tests;\n    return index(function * () {\n      let id = 1;\n      try {\n        const results = runnable.map(t=>t.run());\n        for (let r of results) {\n          const {assertions, executionTime} = yield r;\n          for (let assert of assertions) {\n            sinkIterator.next(Object.assign(assert, {id, executionTime}));\n          }\n          id++;\n        }\n      }\n      catch (e) {\n        sinkIterator.throw(e);\n      } finally {\n        sinkIterator.return();\n      }\n    }.bind(this))\n  },\n\n  * [Symbol.iterator](){\n    for (let t of this.tests) {\n      yield t;\n    }\n  }\n};\n\nfunction plan () {\n  return Object.create(Plan, {\n    tests: {value: []},\n    length: {\n      get(){\n        return this.tests.length\n      }\n    }\n  });\n}\n\nexport default plan;\n","const swap = (f) => (a, b) => f(b, a);\nconst compose = (first, ...fns) => (...args) => fns.reduce((previous, current) => current(previous), first(...args));\nconst curry = (fn, arityLeft) => {\n    const arity = arityLeft || fn.length;\n    return (...args) => {\n        const argLength = args.length || 1;\n        if (arity === argLength) {\n            return fn(...args);\n        }\n        const func = (...moreArgs) => fn(...args, ...moreArgs);\n        return curry(func, arity - args.length);\n    };\n};\nconst apply = (fn) => (...args) => fn(...args);\nconst tap = (fn) => arg => {\n    fn(arg);\n    return arg;\n};\n\nexport { swap, compose, curry, apply, tap };\n","const pointer = (path) => {\n    const parts = path.split('.');\n    const partial = (obj = {}, parts = []) => {\n        const p = parts.shift();\n        const current = obj[p];\n        return (current === undefined || current === null || parts.length === 0) ?\n            current : partial(current, parts);\n    };\n    const set = (target, newTree) => {\n        let current = target;\n        const [leaf, ...intermediate] = parts.reverse();\n        for (const key of intermediate.reverse()) {\n            if (current[key] === undefined) {\n                current[key] = {};\n                current = current[key];\n            }\n        }\n        current[leaf] = Object.assign(current[leaf] || {}, newTree);\n        return target;\n    };\n    return {\n        get(target) {\n            return partial(target, [...parts]);\n        },\n        set\n    };\n};\n\nexport { pointer };\n","import { swap } from 'smart-table-operators';\nimport { pointer } from 'smart-table-json-pointer';\n\nconst defaultComparator = (a, b) => {\n    if (a === b) {\n        return 0;\n    }\n    if (a === undefined) {\n        return 1;\n    }\n    if (b === undefined) {\n        return -1;\n    }\n    return a < b ? -1 : 1;\n};\nvar SortDirection;\n(function (SortDirection) {\n    SortDirection[\"ASC\"] = \"asc\";\n    SortDirection[\"DESC\"] = \"desc\";\n    SortDirection[\"NONE\"] = \"none\";\n})(SortDirection || (SortDirection = {}));\nconst sortByProperty = (prop, comparator) => {\n    const propGetter = pointer(prop).get;\n    return (a, b) => comparator(propGetter(a), propGetter(b));\n};\nconst defaultSortFactory = (conf) => {\n    const { pointer: pointer$$1, direction = \"asc\" /* ASC */, comparator = defaultComparator } = conf;\n    if (!pointer$$1 || direction === \"none\" /* NONE */) {\n        return (array) => [...array];\n    }\n    const orderFunc = sortByProperty(pointer$$1, comparator);\n    const compareFunc = direction === \"desc\" /* DESC */ ? swap(orderFunc) : orderFunc;\n    return (array) => [...array].sort(compareFunc);\n};\n\nexport { SortDirection, defaultSortFactory };\n","import { compose } from 'smart-table-operators';\nimport { pointer } from 'smart-table-json-pointer';\n\nvar Type;\n(function (Type) {\n    Type[\"BOOLEAN\"] = \"boolean\";\n    Type[\"NUMBER\"] = \"number\";\n    Type[\"DATE\"] = \"date\";\n    Type[\"STRING\"] = \"string\";\n})(Type || (Type = {}));\nconst typeExpression = (type) => {\n    switch (type) {\n        case Type.BOOLEAN:\n            return Boolean;\n        case Type.NUMBER:\n            return Number;\n        case Type.DATE:\n            return val => new Date(val);\n        case Type.STRING:\n            return compose(String, val => val.toLowerCase());\n        default:\n            return val => val;\n    }\n};\nvar FilterOperator;\n(function (FilterOperator) {\n    FilterOperator[\"INCLUDES\"] = \"includes\";\n    FilterOperator[\"IS\"] = \"is\";\n    FilterOperator[\"IS_NOT\"] = \"isNot\";\n    FilterOperator[\"LOWER_THAN\"] = \"lt\";\n    FilterOperator[\"GREATER_THAN\"] = \"gt\";\n    FilterOperator[\"GREATER_THAN_OR_EQUAL\"] = \"gte\";\n    FilterOperator[\"LOWER_THAN_OR_EQUAL\"] = \"lte\";\n    FilterOperator[\"EQUALS\"] = \"equals\";\n    FilterOperator[\"NOT_EQUALS\"] = \"notEquals\";\n    FilterOperator[\"ANY_OF\"] = \"anyOf\";\n})(FilterOperator || (FilterOperator = {}));\nconst not = fn => input => !fn(input);\nconst is = value => input => Object.is(value, input);\nconst lt = value => input => input < value;\nconst gt = value => input => input > value;\nconst equals = value => input => value === input;\nconst includes = value => input => input.includes(value);\nconst anyOf = value => input => value.includes(input);\nconst operators = {\n    [\"includes\" /* INCLUDES */]: includes,\n    [\"is\" /* IS */]: is,\n    [\"isNot\" /* IS_NOT */]: compose(is, not),\n    [\"lt\" /* LOWER_THAN */]: lt,\n    [\"gte\" /* GREATER_THAN_OR_EQUAL */]: compose(lt, not),\n    [\"gt\" /* GREATER_THAN */]: gt,\n    [\"lte\" /* LOWER_THAN_OR_EQUAL */]: compose(gt, not),\n    [\"equals\" /* EQUALS */]: equals,\n    [\"notEquals\" /* NOT_EQUALS */]: compose(equals, not),\n    [\"anyOf\" /* ANY_OF */]: anyOf\n};\nconst every = fns => (...args) => fns.every(fn => fn(...args));\nconst predicate = ({ value = '', operator = \"includes\" /* INCLUDES */, type }) => {\n    const typeIt = typeExpression(type);\n    const operateOnTyped = compose(typeIt, operators[operator]);\n    const predicateFunc = operateOnTyped(value);\n    return compose(typeIt, predicateFunc);\n};\n// Avoid useless filter lookup (improve perf)\nconst normalizeClauses = (conf) => {\n    const output = {};\n    const validPath = Object.keys(conf).filter(path => Array.isArray(conf[path]));\n    validPath.forEach(path => {\n        const validClauses = conf[path].filter(c => c.value !== '');\n        if (validClauses.length > 0) {\n            output[path] = validClauses;\n        }\n    });\n    return output;\n};\nconst filter = (filter) => {\n    const normalizedClauses = normalizeClauses(filter);\n    const funcList = Object.keys(normalizedClauses).map(path => {\n        const getter = pointer(path).get;\n        const clauses = normalizedClauses[path].map(predicate);\n        return compose(getter, every(clauses));\n    });\n    const filterPredicate = every(funcList);\n    return array => array.filter(filterPredicate);\n};\n\nexport { FilterOperator, predicate, filter };\n","import { pointer } from 'smart-table-json-pointer';\n\nconst basic = (input) => {\n    const { value, scope = [], isCaseSensitive = false } = input;\n    const searchPointers = scope.map(field => pointer(field).get);\n    if (scope.length === 0 || !value) {\n        return (array) => array;\n    }\n    const test = isCaseSensitive === true ? String(value) : String(value).toLowerCase();\n    return (array) => array.filter(item => searchPointers.some(p => {\n        const v = isCaseSensitive === true ? String(p(item)) : String(p(item)).toLowerCase();\n        return v.includes(test);\n    }));\n};\n\nfunction re(strs, ...substs) {\n    let reStr = transformRaw(strs.raw[0]);\n    for (const [i, subst] of substs.entries()) {\n        if (subst instanceof RegExp) {\n            reStr += subst.source;\n        } else if (typeof subst === 'string') {\n            reStr += quoteText(subst);\n        } else {\n            throw new Error('Illegal substitution: '+subst);\n        }\n        reStr += transformRaw(strs.raw[i+1]);\n    }\n    let flags = '';\n    if (reStr.startsWith('/')) {\n        const lastSlashIndex = reStr.lastIndexOf('/');\n        if (lastSlashIndex === 0) {\n            throw new Error('If the `re` string starts with a slash, it must end with a second slash and zero or more flags: '+reStr);\n        }\n        flags = reStr.slice(lastSlashIndex+1);\n        reStr = reStr.slice(1, lastSlashIndex);\n    }\n    return new RegExp(reStr, flags);\n}\n\nfunction transformRaw(str) {\n    return str.replace(/\\\\`/g, '`');\n}\n\n/**\n * All special characters are escaped, because you may want to quote several characters inside parentheses or square brackets.\n */\nfunction quoteText(text) {\n    return text.replace(/[\\\\^$.*+?()[\\]{}|=!<>:-]/g, '\\\\$&');\n}\n\nconst regexp = (input) => {\n    const { value, scope = [], escape = false, flags = '' } = input;\n    const searchPointers = scope.map(field => pointer(field).get);\n    if (scope.length === 0 || !value) {\n        return (array) => array;\n    }\n    const regex = escape === true ? re `/${value}/${flags}` : new RegExp(value, flags);\n    return (array) => array.filter(item => searchPointers.some(p => regex.test(String(p(item)))));\n};\n\nexport { basic, regexp };\n","const emitter = () => {\n    const listenersLists = {};\n    const instance = {\n        on(event, ...listeners) {\n            listenersLists[event] = (listenersLists[event] || []).concat(listeners);\n            return instance;\n        },\n        dispatch(event, ...args) {\n            const listeners = listenersLists[event] || [];\n            for (const listener of listeners) {\n                listener(...args);\n            }\n            return instance;\n        },\n        off(event, ...listeners) {\n            if (event === undefined) {\n                Object.keys(listenersLists).forEach(ev => instance.off(ev));\n            }\n            else {\n                const list = listenersLists[event] || [];\n                listenersLists[event] = listeners.length ? list.filter(listener => !listeners.includes(listener)) : [];\n            }\n            return instance;\n        }\n    };\n    return instance;\n};\nconst proxyListener = (eventMap) => ({ emitter }) => {\n    const eventListeners = {};\n    const proxy = {\n        off(ev) {\n            if (!ev) {\n                Object.keys(eventListeners).forEach(eventName => proxy.off(eventName));\n            }\n            if (eventListeners[ev]) {\n                emitter.off(ev, ...eventListeners[ev]);\n            }\n            return proxy;\n        }\n    };\n    for (const ev of Object.keys(eventMap)) {\n        const method = eventMap[ev];\n        eventListeners[ev] = [];\n        proxy[method] = function (...listeners) {\n            eventListeners[ev] = eventListeners[ev].concat(listeners);\n            emitter.on(ev, ...listeners);\n            return proxy;\n        };\n    }\n    return proxy;\n};\n\nexport { emitter, proxyListener };\n","import { defaultSortFactory } from 'smart-table-sort';\nexport { SortDirection } from 'smart-table-sort';\nimport { filter } from 'smart-table-filter';\nexport { FilterOperator } from 'smart-table-filter';\nimport { regexp } from 'smart-table-search';\nimport { curry, compose, tap } from 'smart-table-operators';\nimport { pointer } from 'smart-table-json-pointer';\nimport { emitter, proxyListener } from 'smart-table-events';\n\nconst sliceFactory = ({ page = 1, size } = { page: 1 }) => (array = []) => {\n    const actualSize = size || array.length;\n    const offset = (page - 1) * actualSize;\n    return array.slice(offset, offset + actualSize);\n};\n\nvar SmartTableEvents;\n(function (SmartTableEvents) {\n    SmartTableEvents[\"TOGGLE_SORT\"] = \"TOGGLE_SORT\";\n    SmartTableEvents[\"DISPLAY_CHANGED\"] = \"DISPLAY_CHANGED\";\n    SmartTableEvents[\"PAGE_CHANGED\"] = \"CHANGE_PAGE\";\n    SmartTableEvents[\"EXEC_CHANGED\"] = \"EXEC_CHANGED\";\n    SmartTableEvents[\"FILTER_CHANGED\"] = \"FILTER_CHANGED\";\n    SmartTableEvents[\"SUMMARY_CHANGED\"] = \"SUMMARY_CHANGED\";\n    SmartTableEvents[\"SEARCH_CHANGED\"] = \"SEARCH_CHANGED\";\n    SmartTableEvents[\"EXEC_ERROR\"] = \"EXEC_ERROR\";\n})(SmartTableEvents || (SmartTableEvents = {}));\nconst curriedPointer = (path) => {\n    const { get, set } = pointer(path);\n    return { get, set: curry(set) };\n};\nconst tableDirective = ({ sortFactory, tableState, data, filterFactory, searchFactory }) => {\n    let filteredCount = data.length;\n    let matchingItems = data;\n    const table = emitter();\n    const sortPointer = curriedPointer('sort');\n    const slicePointer = curriedPointer('slice');\n    const filterPointer = curriedPointer('filter');\n    const searchPointer = curriedPointer('search');\n    // We need to register in case the summary comes from outside (like server data)\n    table.on(\"SUMMARY_CHANGED\" /* SUMMARY_CHANGED */, ({ filteredCount: count }) => {\n        filteredCount = count;\n    });\n    const safeAssign = curry((base, extension) => Object.assign({}, base, extension));\n    const dispatch = curry(table.dispatch, 2);\n    const dispatchSummary = (filtered) => {\n        matchingItems = filtered;\n        return dispatch(\"SUMMARY_CHANGED\" /* SUMMARY_CHANGED */, {\n            page: tableState.slice.page,\n            size: tableState.slice.size,\n            filteredCount: filtered.length\n        });\n    };\n    const exec = ({ processingDelay = 20 } = { processingDelay: 20 }) => {\n        table.dispatch(\"EXEC_CHANGED\" /* EXEC_CHANGED */, { working: true });\n        setTimeout(() => {\n            try {\n                const filterFunc = filterFactory(filterPointer.get(tableState));\n                const searchFunc = searchFactory(searchPointer.get(tableState));\n                const sortFunc = sortFactory(sortPointer.get(tableState));\n                const sliceFunc = sliceFactory(slicePointer.get(tableState));\n                const execFunc = compose(filterFunc, searchFunc, tap(dispatchSummary), sortFunc, sliceFunc);\n                const displayed = execFunc(data);\n                table.dispatch(\"DISPLAY_CHANGED\" /* DISPLAY_CHANGED */, displayed.map(d => ({\n                    index: data.indexOf(d),\n                    value: d\n                })));\n            }\n            catch (err) {\n                table.dispatch(\"EXEC_ERROR\" /* EXEC_ERROR */, err);\n            }\n            finally {\n                table.dispatch(\"EXEC_CHANGED\" /* EXEC_CHANGED */, { working: false });\n            }\n        }, processingDelay);\n    };\n    const updateTableState = curry((pter, ev, newPartialState) => compose(safeAssign(pter.get(tableState)), tap(dispatch(ev)), pter.set(tableState))(newPartialState));\n    const resetToFirstPage = () => updateTableState(slicePointer, \"CHANGE_PAGE\" /* PAGE_CHANGED */, { page: 1 });\n    const tableOperation = (pter, ev) => compose(updateTableState(pter, ev), resetToFirstPage, () => table.exec() // We wrap within a function so table.exec can be overwritten (when using with a server for example)\n    );\n    const api = {\n        sort: tableOperation(sortPointer, \"TOGGLE_SORT\" /* TOGGLE_SORT */),\n        filter: tableOperation(filterPointer, \"FILTER_CHANGED\" /* FILTER_CHANGED */),\n        search: tableOperation(searchPointer, \"SEARCH_CHANGED\" /* SEARCH_CHANGED */),\n        slice: compose(updateTableState(slicePointer, \"CHANGE_PAGE\" /* PAGE_CHANGED */), () => table.exec()),\n        exec,\n        async eval(state = tableState) {\n            const sortFunc = sortFactory(sortPointer.get(state));\n            const searchFunc = searchFactory(searchPointer.get(state));\n            const filterFunc = filterFactory(filterPointer.get(state));\n            const sliceFunc = sliceFactory(slicePointer.get(state));\n            const execFunc = compose(filterFunc, searchFunc, sortFunc, sliceFunc);\n            return execFunc(data).map(d => ({ index: data.indexOf(d), value: d }));\n        },\n        onDisplayChange(fn) {\n            table.on(\"DISPLAY_CHANGED\" /* DISPLAY_CHANGED */, fn);\n        },\n        getTableState() {\n            const sort = Object.assign({}, tableState.sort);\n            const search = Object.assign({}, tableState.search);\n            const slice = Object.assign({}, tableState.slice);\n            const filter = {};\n            for (const prop of Object.getOwnPropertyNames(tableState.filter)) {\n                filter[prop] = tableState.filter[prop].map(v => Object.assign({}, v));\n            }\n            return { sort, search, slice, filter };\n        },\n        getMatchingItems() {\n            return [...matchingItems];\n        }\n    };\n    const instance = Object.assign(table, api);\n    Object.defineProperties(instance, {\n        filteredCount: {\n            get() {\n                return filteredCount;\n            }\n        },\n        length: {\n            get() {\n                return data.length;\n            }\n        }\n    });\n    return instance;\n};\n\nconst filterListener = proxyListener({ [\"FILTER_CHANGED\" /* FILTER_CHANGED */]: 'onFilterChange' });\n// todo expose and re-export from smart-table-filter\nvar FilterType;\n(function (FilterType) {\n    FilterType[\"BOOLEAN\"] = \"boolean\";\n    FilterType[\"NUMBER\"] = \"number\";\n    FilterType[\"DATE\"] = \"date\";\n    FilterType[\"STRING\"] = \"string\";\n})(FilterType || (FilterType = {}));\nconst filterDirective = ({ table, pointer, operator = \"includes\" /* INCLUDES */, type = \"string\" /* STRING */ }) => {\n    const proxy = filterListener({ emitter: table });\n    return Object.assign({\n        filter(input) {\n            const filterConf = {\n                [pointer]: [\n                    {\n                        value: input,\n                        operator,\n                        type\n                    }\n                ]\n            };\n            return table.filter(filterConf);\n        },\n        state() {\n            return table.getTableState().filter;\n        }\n    }, proxy);\n};\n\nconst searchListener = proxyListener({ [\"SEARCH_CHANGED\" /* SEARCH_CHANGED */]: 'onSearchChange' });\nconst searchDirective = ({ table, scope = [] }) => {\n    const proxy = searchListener({ emitter: table });\n    return Object.assign(proxy, {\n        search(input, opts = {}) {\n            return table.search(Object.assign({}, { value: input, scope }, opts));\n        },\n        state() {\n            return table.getTableState().search;\n        }\n    }, proxy);\n};\n\nconst sliceListener = proxyListener({\n    [\"CHANGE_PAGE\" /* PAGE_CHANGED */]: 'onPageChange',\n    [\"SUMMARY_CHANGED\" /* SUMMARY_CHANGED */]: 'onSummaryChange'\n});\nconst paginationDirective = ({ table }) => {\n    let { slice: { page: currentPage, size: currentSize } } = table.getTableState();\n    let itemListLength = table.filteredCount;\n    const proxy = sliceListener({ emitter: table });\n    const api = {\n        selectPage(p) {\n            return table.slice({ page: p, size: currentSize });\n        },\n        selectNextPage() {\n            return api.selectPage(currentPage + 1);\n        },\n        selectPreviousPage() {\n            return api.selectPage(currentPage - 1);\n        },\n        changePageSize(size) {\n            return table.slice({ page: 1, size });\n        },\n        isPreviousPageEnabled() {\n            return currentPage > 1;\n        },\n        isNextPageEnabled() {\n            return Math.ceil(itemListLength / currentSize) > currentPage;\n        },\n        state() {\n            return Object.assign(table.getTableState().slice, { filteredCount: itemListLength });\n        }\n    };\n    const directive = Object.assign(api, proxy);\n    directive.onSummaryChange(({ page: p, size: s, filteredCount }) => {\n        currentPage = p;\n        currentSize = s;\n        itemListLength = filteredCount;\n    });\n    return directive;\n};\n\nconst debounce = (fn, time) => {\n    let timer = null;\n    return (...args) => {\n        if (timer !== null) {\n            clearTimeout(timer);\n        }\n        timer = setTimeout(() => fn(...args), time);\n    };\n};\nconst sortListeners = proxyListener({ [\"TOGGLE_SORT\" /* TOGGLE_SORT */]: 'onSortToggle' });\nconst directions = [\"asc\" /* ASC */, \"desc\" /* DESC */];\nconst sortDirective = ({ pointer, table, cycle = false, debounceTime = 0 }) => {\n    const cycleDirections = cycle === true ? [\"none\" /* NONE */].concat(directions) : [...directions].reverse();\n    const commit = debounce(table.sort, debounceTime);\n    let hit = 0;\n    const proxy = sortListeners({ emitter: table });\n    const directive = Object.assign({\n        toggle() {\n            hit++;\n            const direction = cycleDirections[hit % cycleDirections.length];\n            return commit({ pointer, direction });\n        },\n        state() {\n            return table.getTableState().sort;\n        }\n    }, proxy);\n    directive.onSortToggle(({ pointer: p }) => {\n        hit = pointer !== p ? 0 : hit;\n    });\n    const { pointer: statePointer, direction = \"asc\" /* ASC */ } = directive.state();\n    hit = statePointer === pointer ? (direction === \"asc\" /* ASC */ ? 1 : 2) : 0;\n    return directive;\n};\n\nconst summaryListener = proxyListener({ [\"SUMMARY_CHANGED\" /* SUMMARY_CHANGED */]: 'onSummaryChange' });\nconst summaryDirective = ({ table }) => summaryListener({ emitter: table });\n\nconst executionListener = proxyListener({ [\"EXEC_CHANGED\" /* EXEC_CHANGED */]: 'onExecutionChange' });\nconst workingIndicatorDirective = ({ table }) => executionListener({ emitter: table });\n\nconst defaultTableState = () => ({ sort: {}, slice: { page: 1 }, filter: {}, search: {} });\nconst smartTable = ({ sortFactory = defaultSortFactory, filterFactory = filter, searchFactory = regexp, tableState = defaultTableState(), data = [] } = {\n    sortFactory: defaultSortFactory,\n    filterFactory: filter,\n    searchFactory: regexp,\n    tableState: defaultTableState(),\n    data: []\n}, ...tableExtensions) => {\n    const coreTable = tableDirective({ sortFactory, filterFactory, tableState, data, searchFactory });\n    return tableExtensions.reduce((accumulator, newdir) => Object.assign(accumulator, newdir({\n        sortFactory,\n        filterFactory,\n        searchFactory,\n        tableState,\n        data,\n        table: coreTable\n    })), coreTable);\n};\n\nexport { FilterType, SmartTableEvents, filterDirective, paginationDirective, searchDirective, sliceFactory, smartTable, sortDirective, summaryDirective, tableDirective, workingIndicatorDirective };\n","export default  ({query}) => ({table, tableState}) => {\n  const exec = () => {\n    table.dispatch('EXEC_CHANGED', {working: true});\n    return query(tableState)\n      .then(({data = [], summary = {}}) => {\n        table.dispatch('SUMMARY_CHANGED', summary);\n        table.dispatch('DISPLAY_CHANGED', data);\n        table.dispatch('EXEC_CHANGED', {working: false});\n      })\n      .catch(e => {\n        table.dispatch('EXEC_ERROR', e);\n        table.dispatch('EXEC_CHANGED', {working: false});\n      });\n  };\n\n  return Object.assign(table, {\n    exec, eval: (ts = tableState) => query(ts).then(({data}) => data)\n  });\n};","import zora from 'zora';\nimport {smartTable as table} from 'smart-table-core';\nimport ext from '../index';\n\nzora()\n  .test('should dispatch working state change', function * (t) {\n    let workingState;\n    const tb = table({data: []}, ext({query: (tableState) => Promise.resolve({summary: {}, data: []})}));\n    tb.on('EXEC_CHANGED', ({working}) => {\n      workingState = working;\n    });\n    const p = tb.sort({pointer: 'foo'});\n    t.equal(workingState, true);\n    yield p;\n    t.equal(workingState, false);\n  })\n  .test('should dispatch error when promise is rejected', function * (t) {\n    let workingState;\n    let err;\n    const error = {message: 'ERROR !!!'};\n    const tb = table({data: []}, ext({query: (tableState) => Promise.reject(error)}));\n    tb.on('EXEC_CHANGED', ({working}) => {\n      workingState = working;\n    });\n    tb.on('EXEC_ERROR', (e) => {\n      err = e;\n    });\n    const p = tb.sort({pointer: 'foo'});\n    t.equal(workingState, true);\n    try {\n      yield p;\n    } catch (e) {\n      t.fail('should not be here');\n    }\n    t.equal(workingState, false);\n    t.equal(err, error);\n  })\n  .test('should dispatch summary changed based on the client value', function * (t) {\n    let summary;\n    const tb = table({data: []}, ext({\n      query: (tableState) => Promise.resolve({\n        summary: {\n          foo: 'bar'\n        }, data: []\n      })\n    }));\n    tb.on('SUMMARY_CHANGED', s => {\n      summary = s;\n    });\n    const p = tb.sort({pointer: 'foo'});\n    yield p;\n    t.deepEqual(summary, {foo: 'bar'});\n  })\n  .test('should dispatch display changed based on the client value', function * (t) {\n    let data;\n    const tb = table({data: []}, ext({\n      query: (tableState) => Promise.resolve({\n        summary: {\n          foo: 'bar'\n        }, data: [\n          {woot: 'blah'},\n          {woot: 'im'}\n        ]\n      })\n    }));\n    tb.on('DISPLAY_CHANGED', d => {\n      data = d;\n    });\n    const p = tb.sort({pointer: 'foo'});\n    yield p;\n    t.deepEqual(data, [\n        {woot: 'blah'},\n        {woot: 'im'}\n      ]\n    );\n  })\n  .test('should overwrite eval function to resolve with value provided by client', function * (t) {\n    const tb = table({data: []}, ext({\n      query: (tableState) => Promise.resolve({\n        summary: {\n          foo: 'bar'\n        }, data: [\n          {woot: 'blah'},\n          {woot: 'im'}\n        ]\n      })\n    }));\n\n    const d = yield tb.eval();\n    t.deepEqual(d, [\n      {woot: 'blah'},\n      {woot: 'im'}\n    ]);\n  })\n  .run();"],"names":["plan","tap","filter","pointer","zora","table"],"mappings":"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"}